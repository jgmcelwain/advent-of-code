import { attemptOrientation } from './attemptOrientation';
import { countUniqueBeacons } from './countUniqueBeacons';
import { getMaxManhattanDistance } from './getMaxManhattanDistance';
import { placeScanners } from './placeScanners';

const testInputScans = [
  [
    { x: 404, y: -588, z: -901 },
    { x: 528, y: -643, z: 409 },
    { x: -838, y: 591, z: 734 },
    { x: 390, y: -675, z: -793 },
    { x: -537, y: -823, z: -458 },
    { x: -485, y: -357, z: 347 },
    { x: -345, y: -311, z: 381 },
    { x: -661, y: -816, z: -575 },
    { x: -876, y: 649, z: 763 },
    { x: -618, y: -824, z: -621 },
    { x: 553, y: 345, z: -567 },
    { x: 474, y: 580, z: 667 },
    { x: -447, y: -329, z: 318 },
    { x: -584, y: 868, z: -557 },
    { x: 544, y: -627, z: -890 },
    { x: 564, y: 392, z: -477 },
    { x: 455, y: 729, z: 728 },
    { x: -892, y: 524, z: 684 },
    { x: -689, y: 845, z: -530 },
    { x: 423, y: -701, z: 434 },
    { x: 7, y: -33, z: -71 },
    { x: 630, y: 319, z: -379 },
    { x: 443, y: 580, z: 662 },
    { x: -789, y: 900, z: -551 },
    { x: 459, y: -707, z: 401 },
  ],
  [
    { x: 686, y: 422, z: 578 },
    { x: 605, y: 423, z: 415 },
    { x: 515, y: 917, z: -361 },
    { x: -336, y: 658, z: 858 },
    { x: 95, y: 138, z: 22 },
    { x: -476, y: 619, z: 847 },
    { x: -340, y: -569, z: -846 },
    { x: 567, y: -361, z: 727 },
    { x: -460, y: 603, z: -452 },
    { x: 669, y: -402, z: 600 },
    { x: 729, y: 430, z: 532 },
    { x: -500, y: -761, z: 534 },
    { x: -322, y: 571, z: 750 },
    { x: -466, y: -666, z: -811 },
    { x: -429, y: -592, z: 574 },
    { x: -355, y: 545, z: -477 },
    { x: 703, y: -491, z: -529 },
    { x: -328, y: -685, z: 520 },
    { x: 413, y: 935, z: -424 },
    { x: -391, y: 539, z: -444 },
    { x: 586, y: -435, z: 557 },
    { x: -364, y: -763, z: -893 },
    { x: 807, y: -499, z: -711 },
    { x: 755, y: -354, z: -619 },
    { x: 553, y: 889, z: -390 },
  ],
  [
    { x: 649, y: 640, z: 665 },
    { x: 682, y: -795, z: 504 },
    { x: -784, y: 533, z: -524 },
    { x: -644, y: 584, z: -595 },
    { x: -588, y: -843, z: 648 },
    { x: -30, y: 6, z: 44 },
    { x: -674, y: 560, z: 763 },
    { x: 500, y: 723, z: -460 },
    { x: 609, y: 671, z: -379 },
    { x: -555, y: -800, z: 653 },
    { x: -675, y: -892, z: -343 },
    { x: 697, y: -426, z: -610 },
    { x: 578, y: 704, z: 681 },
    { x: 493, y: 664, z: -388 },
    { x: -671, y: -858, z: 530 },
    { x: -667, y: 343, z: 800 },
    { x: 571, y: -461, z: -707 },
    { x: -138, y: -166, z: 112 },
    { x: -889, y: 563, z: -600 },
    { x: 646, y: -828, z: 498 },
    { x: 640, y: 759, z: 510 },
    { x: -630, y: 509, z: 768 },
    { x: -681, y: -892, z: -333 },
    { x: 673, y: -379, z: -804 },
    { x: -742, y: -814, z: -386 },
    { x: 577, y: -820, z: 562 },
  ],
  [
    { x: -589, y: 542, z: 597 },
    { x: 605, y: -692, z: 669 },
    { x: -500, y: 565, z: -823 },
    { x: -660, y: 373, z: 557 },
    { x: -458, y: -679, z: -417 },
    { x: -488, y: 449, z: 543 },
    { x: -626, y: 468, z: -788 },
    { x: 338, y: -750, z: -386 },
    { x: 528, y: -832, z: -391 },
    { x: 562, y: -778, z: 733 },
    { x: -938, y: -730, z: 414 },
    { x: 543, y: 643, z: -506 },
    { x: -524, y: 371, z: -870 },
    { x: 407, y: 773, z: 750 },
    { x: -104, y: 29, z: 83 },
    { x: 378, y: -903, z: -323 },
    { x: -778, y: -728, z: 485 },
    { x: 426, y: 699, z: 580 },
    { x: -438, y: -605, z: -362 },
    { x: -469, y: -447, z: -387 },
    { x: 509, y: 732, z: 623 },
    { x: 647, y: 635, z: -688 },
    { x: -868, y: -804, z: 481 },
    { x: 614, y: -800, z: 639 },
    { x: 595, y: 780, z: -596 },
  ],
  [
    { x: 727, y: 592, z: 562 },
    { x: -293, y: -554, z: 779 },
    { x: 441, y: 611, z: -461 },
    { x: -714, y: 465, z: -776 },
    { x: -743, y: 427, z: -804 },
    { x: -660, y: -479, z: -426 },
    { x: 832, y: -632, z: 460 },
    { x: 927, y: -485, z: -438 },
    { x: 408, y: 393, z: -506 },
    { x: 466, y: 436, z: -512 },
    { x: 110, y: 16, z: 151 },
    { x: -258, y: -428, z: 682 },
    { x: -393, y: 719, z: 612 },
    { x: -211, y: -452, z: 876 },
    { x: 808, y: -476, z: -593 },
    { x: -575, y: 615, z: 604 },
    { x: -485, y: 667, z: 467 },
    { x: -680, y: 325, z: -822 },
    { x: -627, y: -443, z: -432 },
    { x: 872, y: -547, z: -609 },
    { x: 833, y: 512, z: 582 },
    { x: 807, y: 604, z: 487 },
    { x: 839, y: -516, z: 451 },
    { x: 891, y: -625, z: 532 },
    { x: -652, y: -548, z: -490 },
    { x: 30, y: -46, z: -14 },
  ],
];

const testScanners = [
  {
    position: { x: 0, y: 0, z: 0 },
    beacons: [
      { x: 404, y: -588, z: -901 },
      { x: 528, y: -643, z: 409 },
      { x: -838, y: 591, z: 734 },
      { x: 390, y: -675, z: -793 },
      { x: -537, y: -823, z: -458 },
      { x: -485, y: -357, z: 347 },
      { x: -345, y: -311, z: 381 },
      { x: -661, y: -816, z: -575 },
      { x: -876, y: 649, z: 763 },
      { x: -618, y: -824, z: -621 },
      { x: 553, y: 345, z: -567 },
      { x: 474, y: 580, z: 667 },
      { x: -447, y: -329, z: 318 },
      { x: -584, y: 868, z: -557 },
      { x: 544, y: -627, z: -890 },
      { x: 564, y: 392, z: -477 },
      { x: 455, y: 729, z: 728 },
      { x: -892, y: 524, z: 684 },
      { x: -689, y: 845, z: -530 },
      { x: 423, y: -701, z: 434 },
      { x: 7, y: -33, z: -71 },
      { x: 630, y: 319, z: -379 },
      { x: 443, y: 580, z: 662 },
      { x: -789, y: 900, z: -551 },
      { x: 459, y: -707, z: 401 },
    ],
  },
  {
    position: { x: 68, y: -1246, z: -43 },
    beacons: [
      { x: -686, y: 422, z: -578 },
      { x: -605, y: 423, z: -415 },
      { x: -515, y: 917, z: 361 },
      { x: 336, y: 658, z: -858 },
      { x: -95, y: 138, z: -22 },
      { x: 476, y: 619, z: -847 },
      { x: 340, y: -569, z: 846 },
      { x: -567, y: -361, z: -727 },
      { x: 460, y: 603, z: 452 },
      { x: -669, y: -402, z: -600 },
      { x: -729, y: 430, z: -532 },
      { x: 500, y: -761, z: -534 },
      { x: 322, y: 571, z: -750 },
      { x: 466, y: -666, z: 811 },
      { x: 429, y: -592, z: -574 },
      { x: 355, y: 545, z: 477 },
      { x: -703, y: -491, z: 529 },
      { x: 328, y: -685, z: -520 },
      { x: -413, y: 935, z: 424 },
      { x: 391, y: 539, z: 444 },
      { x: -586, y: -435, z: -557 },
      { x: 364, y: -763, z: 893 },
      { x: -807, y: -499, z: 711 },
      { x: -755, y: -354, z: 619 },
      { x: -553, y: 889, z: 390 },
    ],
  },
  {
    position: { x: -20, y: -1133, z: 1061 },
    beacons: [
      { x: -592, y: -562, z: 727 },
      { x: 554, y: -779, z: -293 },
      { x: -611, y: 461, z: 441 },
      { x: -465, y: 776, z: -714 },
      { x: -427, y: 804, z: -743 },
      { x: 479, y: 426, z: -660 },
      { x: 632, y: -460, z: 832 },
      { x: 485, y: 438, z: 927 },
      { x: -393, y: 506, z: 408 },
      { x: -436, y: 512, z: 466 },
      { x: -16, y: -151, z: 110 },
      { x: 428, y: -682, z: -258 },
      { x: -719, y: -612, z: -393 },
      { x: 452, y: -876, z: -211 },
      { x: 476, y: 593, z: 808 },
      { x: -615, y: -604, z: -575 },
      { x: -667, y: -467, z: -485 },
      { x: -325, y: 822, z: -680 },
      { x: 443, y: 432, z: -627 },
      { x: 547, y: 609, z: 872 },
      { x: -512, y: -582, z: 833 },
      { x: -604, y: -487, z: 807 },
      { x: 516, y: -451, z: 839 },
      { x: 625, y: -532, z: 891 },
      { x: 548, y: 490, z: -652 },
      { x: 46, y: 14, z: 30 },
    ],
  },
  {
    position: { x: -92, y: -2380, z: -20 },
    beacons: [
      { x: 589, y: 542, z: -597 },
      { x: -605, y: -692, z: -669 },
      { x: 500, y: 565, z: 823 },
      { x: 660, y: 373, z: -557 },
      { x: 458, y: -679, z: 417 },
      { x: 488, y: 449, z: -543 },
      { x: 626, y: 468, z: 788 },
      { x: -338, y: -750, z: 386 },
      { x: -528, y: -832, z: 391 },
      { x: -562, y: -778, z: -733 },
      { x: 938, y: -730, z: -414 },
      { x: -543, y: 643, z: 506 },
      { x: 524, y: 371, z: 870 },
      { x: -407, y: 773, z: -750 },
      { x: 104, y: 29, z: -83 },
      { x: -378, y: -903, z: 323 },
      { x: 778, y: -728, z: -485 },
      { x: -426, y: 699, z: -580 },
      { x: 438, y: -605, z: 362 },
      { x: 469, y: -447, z: 387 },
      { x: -509, y: 732, z: -623 },
      { x: -647, y: 635, z: 688 },
      { x: 868, y: -804, z: -481 },
      { x: -614, y: -800, z: -639 },
      { x: -595, y: 780, z: 596 },
    ],
  },
  {
    position: { x: 1105, y: -1205, z: 1229 },
    beacons: [
      { x: -649, y: 665, z: 640 },
      { x: -682, y: 504, z: -795 },
      { x: 784, y: -524, z: 533 },
      { x: 644, y: -595, z: 584 },
      { x: 588, y: 648, z: -843 },
      { x: 30, y: 44, z: 6 },
      { x: 674, y: 763, z: 560 },
      { x: -500, y: -460, z: 723 },
      { x: -609, y: -379, z: 671 },
      { x: 555, y: 653, z: -800 },
      { x: 675, y: -343, z: -892 },
      { x: -697, y: -610, z: -426 },
      { x: -578, y: 681, z: 704 },
      { x: -493, y: -388, z: 664 },
      { x: 671, y: 530, z: -858 },
      { x: 667, y: 800, z: 343 },
      { x: -571, y: -707, z: -461 },
      { x: 138, y: 112, z: -166 },
      { x: 889, y: -600, z: 563 },
      { x: -646, y: 498, z: -828 },
      { x: -640, y: 510, z: 759 },
      { x: 630, y: 768, z: 509 },
      { x: 681, y: -333, z: -892 },
      { x: -673, y: -804, z: -379 },
      { x: 742, y: -386, z: -814 },
      { x: -577, y: 562, z: -820 },
    ],
  },
];

describe('attemptOrientation', () => {
  it("orients a scanner based on the beacons it knows about and a given known scanner's location", () => {
    const [position, beacons] = attemptOrientation(
      testInputScans[1],
      testScanners[0],
    );
    expect(position).toStrictEqual(testScanners[1].position);
    expect(beacons).toStrictEqual(testScanners[1].beacons);
  });
});

describe('placeScanners', () => {
  it('places scanners in a 3d space based on the beacons they have found', () => {
    expect(placeScanners(testInputScans)).toStrictEqual(testScanners);
  });
});

describe('getMaxManhattanDistance', () => {
  it('finds the maximum manhattan distance between two scanners in a set', () => {
    expect(getMaxManhattanDistance(testScanners)).toBe(3621);
  });
});
describe('countUniqueBeacons', () => {
  it('counts the number of unique beacons found by a set of scanners', () => {
    expect(countUniqueBeacons(testScanners)).toBe(79);
  });
});
